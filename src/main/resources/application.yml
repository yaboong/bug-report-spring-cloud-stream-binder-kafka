spring.cloud.stream:
  function:
    definition: process
  bindings:
    process-in-0:
      destination: words
    process-out-0:
      destination: counts
  kafka:
    streams:
      binder:
        functions:
          process:
            applicationId: hello-word-count-sample
        configuration:
          commit.interval.ms: 100
          default:
            key.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
            value.serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        process-in-0:
          consumer:
            deserialization-exception-handler: sendToDlq
            dlqName: words-dlq
management:
  metrics:
    export:
      datadog:
        apiKey: '{cipher}7fa779a082325140e263b0a6804d3cd552f4eb6df012a7779c11d7396fc12be5'
        enabled: true
        step: 10s
      wavefront:
        enabled: false
      prometheus:
        enabled: false
        rsocket:
          enabled: false
  endpoint:
    health:
      show-details: ALWAYS
  endpoints:
    web:
      exposure:
        include: health,info,bindings
